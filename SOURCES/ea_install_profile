#!/usr/local/cpanel/3rdparty/bin/perl
# cpanel - ea_install_profile                     Copyright(c) 2016 cPanel, Inc.
#                                                           All rights Reserved.
# copyright@cpanel.net                                         http://cpanel.net
# This code is subject to the cPanel license. Unauthorized copying is prohibited

package ea_install_profile;

use strict;

use Cpanel::JSON;
use Cpanel::PackMan;
use Cpanel::Config::Httpd;
use Data::Dumper;

sub usage {
    my ($msg) = @_;

    print "Error: $msg\n" if defined $msg;
    print "usage: ea_install_profile [--install] profile_file\n";
    print "if you do not pass --install, it will only do conflict resolution on the profile\n";

    exit 0;
}

sub script {
    my (@args) = @_;

    die "May only be run if you are using EasyApache 4" if ( !Cpanel::Config::Httpd::is_ea4() );

    my $profile;
    my $install = 0;

    my $idx = 0;
    if ( $args[$idx] eq "--install" ) {
        $idx++;
        $install = 1;
    }

    usage() if ( !defined $args[$idx] );

    $profile = $args[$idx];

    if ( !-f $profile ) {
        $profile = "/etc/cpanel/ea4/profiles/custom/" . $profile;
        usage("Cannot find profile") if !-f $profile;
    }

    print "Loading profile …\n";
    my %server_pkgs;
    @server_pkgs{ Cpanel::PackMan->instance->list( 'prefix' => 'ea-' ) } = ();

    my $data = Cpanel::JSON::LoadFile($profile);

    # 1. detect any packages in the profile that do not exist on the server
    my %not_on_server = ( map { !exists $server_pkgs{$_} ? ( $_ => undef ) : () } @{ $data->{pkgs} } );

    # 2. remove %not_on_server from $profile->{pkgs}
    $data->{pkgs} = [ grep { !exists $not_on_server{$_} } @{ $data->{pkgs} } ];

    # 3. Tell them about the ones we are ignoring
    my $derps = 0;
    for my $derppkg ( sort keys %not_on_server ) {
        warn "    * Warning! ignored package: $derppkg. It is in the profile’s package list but does not exist on this server.\n";
        $derps++;
    }
    print "\n" if $derps;

    print "The system is resolving package dependencies and conflicts. This may take some time …\n";
    my $resolve_method = defined &Cpanel::PackMan::resolve_multi_op_ns ? 'resolve_multi_op_ns' : 'resolve_multi_op';
    my $res = Cpanel::PackMan->instance->$resolve_method( $data->{'pkgs'}, 'ea' );

    print " … done!\n";

    if ($install) {
        print "Installing …\n";
        print Cpanel::PackMan->instance->multi_op($res);
    }
    else {
        print Dumper($res);
    }

    return 0;
}

exit( script(@ARGV) ) unless caller();

1;

